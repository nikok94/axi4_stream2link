-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\AXIS2LP_convert\Count_NumbByte.vhd
-- Created: 2018-01-22 11:12:46
-- 
-- Generated by MATLAB 8.6 and HDL Coder 3.7
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Count_NumbByte
-- Source Path: AXIS2LP_convert/axi_stream_to_link/Count_NumbByte
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY Count_NumbByte IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        CLK_1                             :   IN    std_logic;
        En                                :   IN    std_logic;
        NumbByte                          :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
        );
END Count_NumbByte;


ARCHITECTURE rtl OF Count_NumbByte IS

  -- Signals
  SIGNAL Logical_Operator2_out1           : std_logic;
  SIGNAL Constant1_out1                   : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Unit_Delay_out1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Add_out1                         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Compare_To_Zero1_out1            : std_logic;
  SIGNAL Logical_Operator4_out1           : std_logic;
  SIGNAL Logical_Operator3_out1           : std_logic;
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL Switch_out1                      : unsigned(1 DOWNTO 0);  -- ufix2

BEGIN
  Logical_Operator2_out1 <= CLK_1 AND En;

  Constant1_out1 <= to_unsigned(16#1#, 2);

  Add_out1 <= resize(resize(Constant1_out1, 32) + resize(Unit_Delay_out1, 32), 2);

  
  Compare_To_Zero1_out1 <= '1' WHEN Unit_Delay_out1 > to_unsigned(16#0#, 2) ELSE
      '0';

  Logical_Operator4_out1 <= Compare_To_Zero1_out1 AND CLK_1;

  Logical_Operator3_out1 <= Logical_Operator4_out1 OR Logical_Operator2_out1;

  
  switch_compare_1 <= '1' WHEN Logical_Operator3_out1 > '0' ELSE
      '0';

  
  Switch_out1 <= Unit_Delay_out1 WHEN switch_compare_1 = '0' ELSE
      Add_out1;

  Unit_Delay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Unit_Delay_out1 <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Unit_Delay_out1 <= Switch_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  NumbByte <= std_logic_vector(Unit_Delay_out1);


END rtl;

